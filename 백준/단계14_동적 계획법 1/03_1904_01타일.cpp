#include <iostream>
using namespace std;

long long  a[1000001];

int main(int argc, char* argv[]) {
	// 2019-10-16-수
	// 백준_단계12	동적 계획법 1 관련 문제
	// 3	1904	01타일 : https://www.acmicpc.net/problem/1904
	// 점화식의 값을 특정 상수로 나눈 나머지를 구하는 문제

	// 결국 현재 1 하나만으로 이루어진 타일 또는 0타일을 두 개 붙인 한 쌍의 00타일
	// 우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것


	// 띵킹 : 1은 개별, 0은 2개가 세트
	// n>2일때, a[n]은 
	// 1) 1로 끝났던 00으로 끝났던 상관없이 바로 전꺼에다 1을 더 합친 경우와
	// 2) 무조건 2칸 전꺼에다가, 00을 더 합친 경우로,
	// 총 2가지 경우가 존재한다.

	// 첫 번째 줄에 지원이가 만들 수 있는 길이가 N인 모든 2진 수열의 개수를 15746으로 나눈 나머지를 출력한다.
	// 아... 출력조건이 있었네...
	long long n;
	cin >> n;
	a[1] = 1; // 1
	a[2] = 2; // 11, 00

	for (int i = 3; i <= n; i++) {
		a[i] = (a[i - 1] + a[i - 2]) % 15746;
	}

	cout << a[n] << "\n";

	return 0;
}